basePath: /
consumes:
- application/json
definitions:
  AuthUser:
    description: AuthUser struct represents mandatory user information for authorisation
    properties:
      email:
        description: The email of a user
        example: qwerty@gmail.com
        type: string
        x-go-name: Email
      password:
        description: The password of a user
        example: ZAQ!2wsx
        type: string
        x-go-name: Password
    required:
    - email
    - password
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  Cat:
    properties:
      dateBirth:
        description: The birthdate of a cat
        example: "2018-09-22T12:42:31Z"
        format: date-time
        type: string
        x-go-name: DateBirth
      id:
        description: The UUID of a cat
        example: 6204037c-30e6-408b-8aaa-dd8219860b4b
        type: string
        x-go-name: ID
      imagePath:
        description: The image path of a cat
        example: 1c219a3f-a959-4395-81f0-4e735040ed61.webp
        type: string
        x-go-name: ImagePath
      name:
        description: The Name of a cat
        example: Some name
        type: string
        x-go-name: Name
      vaccinated:
        description: The status of vaccination of a cat
        example: true
        type: boolean
        x-go-name: Vaccinated
    required:
    - name
    - dateBirth
    - vaccinated
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  CreateCat:
    description: CreateCat is the struct for adding a cat
    properties:
      dateBirth:
        description: The birthdate of a cat
        example: "2018-09-22T12:42:31Z"
        format: date-time
        type: string
        x-go-name: DateBirth
      name:
        description: The Name of a cat
        example: Some name
        type: string
        x-go-name: Name
      vaccinated:
        description: The status of vaccination of a cat
        example: true
        type: boolean
        x-go-name: Vaccinated
    required:
    - name
    - dateBirth
    - vaccinated
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  CreateUser:
    description: CreateUser struct represents mandatory user information for registration
    properties:
      email:
        description: The email of a user
        example: qwerty@gmail.com
        type: string
        x-go-name: Email
      password:
        description: The password of a user
        example: ZAQ!2wsx
        type: string
        x-go-name: Password
      userName:
        description: The Name of a user
        example: Some name
        type: string
        x-go-name: UserName
    required:
    - userName
    - email
    - password
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  ErrorResponseBody:
    properties:
      error:
        description: Error An optional detailed description of the actual error. Only
          included if running in developer mode.
        type: string
        x-go-name: Error
      message:
        description: a human readable version of the error
        type: string
        x-go-name: Message
    required:
    - message
    type: object
    x-go-package: github.com/malkev1ch/first-task/doc
  RefreshToken:
    description: RefreshToken struct represents a  refresh token
    properties:
      refreshToken:
        type: string
        x-go-name: RefreshToken
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  SignInResponseBody:
    properties:
      tokens:
        $ref: '#/definitions/Tokens'
    type: object
    x-go-package: github.com/malkev1ch/first-task/doc
  SignUpResponseBody:
    properties:
      tokens:
        $ref: '#/definitions/Tokens'
    type: object
    x-go-package: github.com/malkev1ch/first-task/doc
  SuccessResponseBody:
    properties:
      message:
        type: string
        x-go-name: Message
    type: object
    x-go-package: github.com/malkev1ch/first-task/doc
  Tokens:
    description: Tokens struct represents a couple of token
    properties:
      accessToken:
        type: string
        x-go-name: AccessToken
      refreshToken:
        type: string
        x-go-name: RefreshToken
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
  UpdateCat:
    description: UpdateCat is the struct for update a cat
    properties:
      dateBirth:
        description: The birthdate of a cat
        example: "2018-09-22T12:42:31Z"
        format: date-time
        type: string
        x-go-name: DateBirth
      name:
        description: The Name of a cat
        example: Some name
        type: string
        x-go-name: Name
      vaccinated:
        description: The status of vaccination of a cat
        example: true
        type: boolean
        x-go-name: Vaccinated
    required:
    - name
    - dateBirth
    - vaccinated
    type: object
    x-go-package: github.com/malkev1ch/first-task/internal/model
host: localhost:8080
info:
  description: Documentation for Cats storage API
  title: Cats storage API
  version: 1.0.0
paths:
  /auth/refresh:
    post:
      description: Returns a couple tokens for existed user.
      operationId: RefreshToken
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AuthUser'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/refreshTokenResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      summary: Refresh a couple tokens used refresh token
      tags:
      - auth
  /auth/sign-in:
    post:
      description: Returns a couple of tokens for existed user.
      operationId: SignIn
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/AuthUser'
        x-go-name: Body
      responses:
        "200":
          $ref: '#/responses/signInResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      summary: Authorisation process for existed user
      tags:
      - auth
  /auth/sign-up:
    post:
      description: Returns a couple of tokens for recently created user.
      operationId: SignUp
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateUser'
        x-go-name: Body
      responses:
        "201":
          $ref: '#/responses/signUpResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      summary: Registration process for new user
      tags:
      - auth
  /cats:
    post:
      description: Creates a new cat.
      operationId: CreateCat
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/CreateCat'
        x-go-name: Body
      responses:
        "201":
          $ref: '#/responses/okResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      security:
      - AdminAuth: []
      summary: Create cat
      tags:
      - cats
  /cats/{uuid}:
    delete:
      operationId: DeleteCat
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
        x-go-name: CatID
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "500":
          $ref: '#/responses/internalServerError'
      security:
      - AdminAuth: []
      summary: Remove cat from storage.
      tags:
      - cats
    get:
      description: Returns a cat with the given UUID.
      operationId: GetCat
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
        x-go-name: CatID
      responses:
        "200":
          $ref: '#/responses/getCatResponse'
        "500":
          $ref: '#/responses/internalServerError'
      security:
      - AdminAuth: []
      summary: Get cat by UUID.
      tags:
      - cats
    put:
      description: Update a cat with the given UUID.
      operationId: UpdateCat
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
        x-go-name: CatID
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      security:
      - AdminAuth: []
      summary: Update cat.
      tags:
      - cats
  /cats/{uuid}/image:
    post:
      consumes:
      - multipart/form-data
      operationId: UploadCatImage
      parameters:
      - in: path
        name: uuid
        required: true
        type: string
        x-go-name: CatID
      - description: MyFormFile desc.
        in: formData
        name: image
        type: file
        x-go-name: MyFormFile
      responses:
        "200":
          $ref: '#/responses/okResponse'
        "400":
          $ref: '#/responses/badRequestError'
        "500":
          $ref: '#/responses/internalServerError'
      summary: Set or update cats image.
      tags:
      - cats
produces:
- application/json
responses:
  badRequestError:
    description: BadRequestError is returned when the request is invalid and it cannot
      be processed.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  genericError:
    description: |-
      A GenericError is the default error message that is generated.
      For certain status codes there are more appropriate error structures.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  getCatResponse:
    description: ""
    schema:
      $ref: '#/definitions/Cat'
  internalServerError:
    description: InternalServerError is a general error indicating something went
      wrong internally.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  notFoundError:
    description: NotFoundError is returned when the request is invalid and it cannot
      be processed.
    schema:
      $ref: '#/definitions/ErrorResponseBody'
  okResponse:
    description: An OKResponse is returned if the request was successful.
    schema:
      $ref: '#/definitions/SuccessResponseBody'
  refreshTokenResponse:
    description: A RefreshTokenResponse returns a couple of token with user id.
    schema:
      $ref: '#/definitions/SignUpResponseBody'
  signInResponse:
    description: A SignInResponse returns a couple of token with user id.
    schema:
      $ref: '#/definitions/SignInResponseBody'
  signUpResponse:
    description: A SignUpResponse returns a couple of token with user id.
    schema:
      $ref: '#/definitions/SignUpResponseBody'
schemes:
- http
securityDefinitions:
  AdminAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
